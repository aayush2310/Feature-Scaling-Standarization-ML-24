//We have a data set "df" having outliers//
//We will study the effect on these outliers after the standardization//
//We will see that applying standardization on outliers does not change the impact on outliers.They remain as outliers//


plt.scatter(df['Age'],df['EstimatedSalary'])

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(df.drop('Purchased',axis=1),df['Purchased'],test_size=0.3,random_state=0)
X_train.shape,X_test.shape

from sklearn.preprocessing import StandardScaler
scaler=StandardScaler()

#fit the scaler to the train set,it will learn the parameters
scaler.fit(X_train)

#transform train and test set
X_train_scaled=scaler.transform(X_train)
X_train_scaled=scaler.transform(X_test)

X_train_scaled=pd.DataFrame(X_train_scaled,columns=X_train.columns)
X_test_scaled=pd.DataFrame(X_test_scaled,columns=X_test.columns)

fig,(ax1,ax2)=plt.subplots(ncols=2,figsize=(12,5))
ax1.scatter(X_train['Age'],X_train['EstimatedSalary'])
ax1.set_title("Before Scaling")
ax2.scatter(X_train_scaled['Age'],X_train_scaled['EstimatedSalary'],color='red')
ax2.set_title("After Scaling")
plt.show()


